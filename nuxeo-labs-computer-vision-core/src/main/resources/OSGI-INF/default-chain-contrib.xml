<?xml version="1.0"?>
<component name="org.nuxeo.labs.vision.core.chains">
    <extension target="org.nuxeo.automation.scripting.internals.AutomationScriptingComponent" point="operation">
        <scriptedOperation id="javascript.PictureVisionDefaultMapper">
            <inputType>Document</inputType>
            <outputType>Document</outputType>
            <category>javascript</category>
            <description></description>
            <script><![CDATA[function run(input, params) {

              var blob = Picture.GetView(input, {'viewName': 'Medium'});

              blob = ComputerVisionOp(blob, {
                'features': ['LABEL_DETECTION','TEXT_DETECTION','LANDMARK_DETECTION','LOGO_DETECTION','IMAGE_PROPERTIES'],
                'maxResults': 5,
                'outputVariable': 'annotations'
              });

              var annotations = ctx.annotations;

              if (annotations===undefined || annotations.length===0) return;

              var textAndLabels = annotations[0];

              // build tag list
              var labels = textAndLabels.getClassificationLabels();

              if (labels !== undefined && labels !== null && labels.length>0) {
                  var tags = [];

                  for(var i=0;i<labels.length;i++) {
                    tags.push(labels[i].getText().replace(' ','+'));
                  }

                  input = Services.TagDocument(input, {'tags': tags });
              }


              // build description
              var texts = textAndLabels.getOcrText();

              if (texts !== undefined && texts !== null && texts.length>0) {
                  var description = "";

                  for(var j=0;j<texts.length;j++) {
                    description+= texts[j].getText()+"\n";
                  }

                  input = Document.SetProperty(input, {
                    'xpath': 'dc:source',
                    'save': 'false',
                    'value': description
                  });
              }

              input = Document.Save(input, {});

              return input;

        }]]></script>
        </scriptedOperation>

        <scriptedOperation id="javascript.VideoVisionDefaultMapper">
            <inputType>Document</inputType>
            <outputType>Document</outputType>
            <category>javascript</category>
            <description></description>
            <script><![CDATA[function run(input, params) {
              var storyboard = input['vid:storyboard'];
              var blobs = [];
              var index;
              var tags = [];

              for (index=0;index<storyboard.length;index++) {

                var blob = storyboard[index].content;

                ComputerVisionOp(blob, {
                  'features': ['LABEL_DETECTION','LANDMARK_DETECTION','LOGO_DETECTION'],
                  'maxResults': 5,
                  'outputVariable': 'annotations'
                });

                var annotations = ctx.annotations;

                if (annotations===undefined || annotations.length===0) return;

                // build tag list
                var textAndLabels = annotations[0];
                var labels = textAndLabels.getClassificationLabels();

                if (labels === undefined || labels === null || labels===0) continue;

                for(var j=0;j<labels.length;j++) {
                  tags.push(labels[j].getText().replace(' ','+'));
                }
              }

              print('Got tags:'+tags.length);

              input = Services.TagDocument(input, {'tags': tags });

              return input;

            }]]></script>
        </scriptedOperation>

    </extension>
</component>
